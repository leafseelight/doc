一、核心概念

	逻辑库schema

	逻辑表table

		分片表 非分片表
			分片表就是将原有的很大数据的表切分到多个数据库的表，每个分片可以只有部分数据，所有分片构成了完整的数据
			非分片是相对于分片来说的，只有一个分片的表就可以叫做非分片表
			
		ER表
			关系型数据库是基于实体关系模型(Entity Relationshio Model)之上的，mycat中的ER表也是来源于此。
			子表的记录与所关联的父表记录放在同一个数据分片上，即子表依赖父表，通过表分组(Table Group)保证数据Join不会跨库操作。
			
		全局表	
			适合数据量不大、变动不频繁的表，如字典表，便于业务表与其进行关联查询
			全局表的所有分片都有一份数据的拷贝
			【数据冗余是解决跨分片join的一个思路】
		
	分片节点dataNode
		每个表分片所在的数据库就是分片节点

	分片主机dataHost	
		每个分片节点不一定都会独占一台机器，同一机器上面可以有多个分片数据库，一个或多个分片节点所在的机器就是节点主机
		为了避免单节点主机并发数限制，尽量将读写压力高的分片节点均衡的放在不同的节点主机
		
	分片规则rule
		
	全局序列号sequence
		数据切分后，原有的关系数据库中的主键约束在分布式条件下降无法使用，需要引入外部机制保证数据唯一性标识，即全局序列号sequence

	多租户	
		一种软件架构技术，实现多用户的环境下共用相同的系统或程序组件，并保证各用户间数据的隔离性。
		三种方案：
			1.独立数据库
				一个租户一个数据库，隔离级别最高，安全性最好，但是成本也高
				适合银行、医院的系统
			2.共享数据库，隔离数据架构
				多个或所有租户共享database 但是每个租户一个schema
				(利用mycat注解：/*!mycat : schema = test_01 */ ，sql执行前动态的加上schema)
				一定程度的逻辑数据隔离
				如果出现故障，数据恢复较困难，因为将牵扯到别的租户的数据；跨租户统计数据困难
			3.共享数据库，共享数据架构
				租户共享同一个database、同一个schema，但再表中通过TenantId字段区分租户的数据
				共享程度最高、隔离级别最低的模式
			
			
二、mycat快速入门-安装配置
	
	安装
		(略)
	
	配置 
		• MYCAT_HOME/conf/schema.xml 中定义逻辑库，表、分片节点等内容；
		• MYCAT_HOME/conf/rule.xml 中定义分片规则；
		• MYCAT_HOME/conf/server.xml 中定义用户以及系统相关变量，如端口等。
			
		(conf目录下的配置文件修改后，需要重启 Mycat 或者通过 9066 端口 reload)	
	
	启动
		linux:
			cd MYCAT_HOME/bin
			./mycat start
			(Mycat 的启动是经过 warapper 封装成启动脚本, 因此mycat启动后除了mycat本身的进程和日志mycat.log,还会有wrapper的进程和日志wrapper.log)
			
		windows
			执行bin目录下的startup_nowrap.bat
		基于zk的启动
			(略)
	
	其他		
		注意：Linux 下部署安装 MySQL，默认不忽略表名大小写，需要手动到/etc/my.cnf 下配置
			  lower_case_table_names=1 使 Linux 环境下 MySQL 忽略表名大小写，否则使用 MyCAT 的时候会提示找不到表的错误！
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			